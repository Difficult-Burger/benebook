<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
  <style>
    body {
      overflow-x: hidden;
    }
    
    .book-card {
      height: 100%;
      transition: transform 0.2s;
    }
    
    .book-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }
    
    /* Page layout */
    .page-container {
      display: flex;
      width: 100%;
      min-height: 100vh;
    }
    
    .main-content {
      flex: 1;
      max-width: calc(100% - 320px);
      padding: 20px;
    }
    
    /* Book card style adjustments */
    .book-image {
      height: 150px;
    }
    
    /* Chat sidebar styles */
    .chat-sidebar {
      width: 320px;
      position: fixed;
      right: 0;
      top: 0;
      bottom: 0;
      background-color: #fff;
      border-left: 1px solid #dee2e6;
      display: flex;
      flex-direction: column;
      z-index: 1000;
    }
    
    .chat-header {
      padding: 15px;
      background-color: #6c757d;
      color: #fff;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    
    .chat-messages {
      flex: 1;
      overflow-y: auto;
      padding: 15px;
      display: flex;
      flex-direction: column;
      gap: 10px;
    }
    
    .message {
      max-width: 80%;
      padding: 10px 15px;
      border-radius: 15px;
      word-wrap: break-word;
    }
    
    .user-message {
      align-self: flex-end;
      background-color: #007bff;
      color: white;
      border-bottom-right-radius: 5px;
    }
    
    .assistant-message {
      align-self: flex-start;
      background-color: #e9ecef;
      color: #212529;
      border-bottom-left-radius: 5px;
    }
    
    .chat-input {
      padding: 15px;
      border-top: 1px solid #dee2e6;
      display: flex;
    }
    
    .chat-input input {
      flex: 1;
      padding: 10px;
      border: 1px solid #ced4da;
      border-radius: 20px;
      margin-right: 10px;
    }
    
    .chat-input button {
      border: none;
      background-color: #007bff;
      color: white;
      border-radius: 20px;
      padding: 5px 15px;
    }
    
    .chat-input button:hover {
      background-color: #0069d9;
    }
    
    /* Responsive adjustments */
    @media (max-width: 992px) {
      .page-container {
        flex-direction: column;
      }
      
      .main-content {
        max-width: 100%;
        order: 1;
      }
      
      .chat-sidebar {
        position: relative;
        width: 100%;
        order: 2;
        height: 400px;
        border-left: none;
        border-top: 1px solid #dee2e6;
      }
    }
  </style>
</head>
<body>
  <div class="page-container">
    <!-- Main content area -->
    <div class="main-content">
      <header class="pb-3 mb-4 border-bottom">
        <div class="d-flex justify-content-between align-items-center">
          <h1 class="display-5 fw-bold">Benebook Book List</h1>
          <div>
            <a href="/donors" class="btn btn-outline-success me-2">Donors</a>
            <a href="/donations" class="btn btn-outline-primary">Donations</a>
            <a href="/rewards" class="btn btn-outline-danger me-2">Points Shop</a>
          </div>
        </div>
      </header>

      <div class="row g-4">
        <% if (books && books.length > 0) { %>
          <% books.forEach(book => { %>
            <div class="col-lg-4 col-md-6 mb-4">
              <div class="card book-card">
                <div class="bg-light text-center p-3 book-image" style="display: flex; align-items: center; justify-content: center;">
                  <% if (book.image_url) { %>
                    <img src="<%= book.image_url %>" alt="<%= book.title %>" style="max-height: 140px; max-width: 100%;">
                  <% } else { %>
                    <span class="text-muted">No Image</span>
                  <% } %>
                </div>
                <div class="card-body">
                  <h5 class="card-title"><%= book.title %></h5>
                  <p class="card-text mb-1"><%= book.author || 'Unknown Author' %></p>
                  <p class="card-text text-muted small mb-2">Category: <%= book.category || 'Uncategorized' %></p>
                  <div class="d-flex justify-content-between align-items-center mt-3">
                    <span class="fw-bold">$<%= book.original_price %></span>
                    <a href="/book/<%= book.book_id %>" class="btn btn-sm btn-primary">View Details</a>
                  </div>
                </div>
              </div>
            </div>
          <% }) %>
        <% } else { %>
          <div class="col-12 text-center py-5">
            <p class="text-muted">No books available</p>
          </div>
        <% } %>
      </div>
    </div>
    
    <!-- Chat sidebar -->
    <div class="chat-sidebar" id="chatSidebar">
      <div class="chat-header">
        <span>Assistant</span>
      </div>
      <div class="chat-messages" id="chatMessages"></div>
      <div class="chat-input">
        <input 
          type="text" 
          id="messageInput" 
          placeholder="Enter your question..." 
          autocomplete="off"
        >
        <button id="sendButton">Send</button>
      </div>
    </div>
  </div>
  
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const chatMessages = document.getElementById('chatMessages');
      const messageInput = document.getElementById('messageInput');
      const sendButton = document.getElementById('sendButton');
      
      // Send message function
      function sendMessage() {
        const message = messageInput.value.trim();
        if (!message) return;
        
        // Disable send button and input
        sendButton.disabled = true;
        sendButton.innerText = 'Sending...';
        messageInput.disabled = true;
        
        // Add user message to chat
        addMessage(message, 'user');
        messageInput.value = '';
        
        // Show loading status
        const loadingId = showLoading();
        
        // Send to backend
        fetch('/api/chat/message', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ message })
        })
        .then(response => response.json())
        .then(data => {
          // Remove loading status
          removeLoading(loadingId);
          
          // Add AI reply to chat
          addMessage(data.response, 'assistant');
          
          // Auto scroll to bottom
          scrollToBottom();
          
          // Re-enable send button and input
          sendButton.disabled = false;
          sendButton.innerText = 'Send';
          messageInput.disabled = false;
          messageInput.focus();
        })
        .catch(error => {
          // Remove loading status
          removeLoading(loadingId);
          
          // Show error message
          addMessage('Sorry, an error occurred. Please try again later.', 'assistant');
          console.error('Error sending message:', error);
          
          // Re-enable send button and input
          sendButton.disabled = false;
          sendButton.innerText = 'Send';
          messageInput.disabled = false;
          messageInput.focus();
        });
      }
      
      // Add message to chat
      function addMessage(text, role) {
        const messageElement = document.createElement('div');
        messageElement.classList.add('message');
        messageElement.classList.add(role === 'user' ? 'user-message' : 'assistant-message');
        
        // Handle line breaks in text
        const formattedText = text.replace(/\n/g, '<br>');
        messageElement.innerHTML = formattedText;
        
        chatMessages.appendChild(messageElement);
        scrollToBottom();
      }
      
      // Show loading status
      function showLoading() {
        const loadingId = Date.now().toString();
        const loadingElement = document.createElement('div');
        loadingElement.classList.add('message', 'assistant-message');
        loadingElement.id = `loading-${loadingId}`;
        loadingElement.innerHTML = 'Thinking...';
        chatMessages.appendChild(loadingElement);
        scrollToBottom();
        return loadingId;
      }
      
      // Remove loading status
      function removeLoading(loadingId) {
        const loadingElement = document.getElementById(`loading-${loadingId}`);
        if (loadingElement) {
          loadingElement.remove();
        }
      }
      
      // Scroll to bottom of chat
      function scrollToBottom() {
        chatMessages.scrollTop = chatMessages.scrollHeight;
      }
      
      // Listen for send button click
      sendButton.addEventListener('click', sendMessage);
      
      // Listen for Enter key in input
      messageInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
          sendMessage();
        }
      });
      
      // Add welcome message
      addMessage('Hello! I am Benebook\'s intelligent assistant. How can I help you?', 'assistant');
    });
  </script>
</body>
</html>